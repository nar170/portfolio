# -*- coding: utf-8 -*-
"""Assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XmbRDCQMhDQst4IgHQOOqgaNzrVXau-P

# Problem Set 2

## Assignment 1: Quality Control (7 points)

A quality control manager would like to find the average weight of a list of weights. Prior experience indicates that the first two measures are atypical, and the practice is to exclude these from the average calculation.

Write a program that calculates the average of a list of numbers that given as inputs from the user, excluding the first three values.

For your program, you must define and use the following functions:
- `getValues(n)`: Prompt the user for `n` values, returns the list
- `calcAverage(alist)`: Calculates the average from the list
"""

def getValues(n):
  vals = []
  print("The following prompt will ask you to submit the numbers given the size you've defined. Enter only a number.")
  for i in range(n):
    temp = int(input("Enter the " + str(i + 1) + " number: "))
    vals.append(temp)
  return vals

def calcAverage(alist):
  if len(alist) <= 3: #Error Handling
    print("The average cannot be calculated as the first three values are excluded")
    return None
  temp = alist[3:]
  avg = sum(temp) / len(temp)
  return avg


calcAverage(getValues(5))

"""## Assignment 2: Country Statistics Lookup-Multiple Measures (6 points)

Assume a program begins with the statement:

```python
allData = { # dictionary of values for countries
    'US': {'pop':325.7, 'gdp': 19.39, 'ccy': 'USD', 'fx':  1.0},
    'CA': {'pop': 36.5, 'gdp':  1.65, 'ccy': 'CAD', 'fx':  1.35},
    'MX': {'pop':129.2, 'gdp':  1.15, 'ccy': 'MXN', 'fx': 19.68}
    }
```

Write subsequent statements that (in a loop) prompt the user for a country code (`US`, `CA`, or `MX`), then prompt for a measure name (`pop`, `gdp`, `ccy`, or `fx`), then look up in the above dictionary for the corresponding value, and display it.

Example run:
```
Please enter a country code: CA
Please enter a statistic: pop
CA pop = 36.5
```

Your program should handle the cases where a user-entered country code or measure name is not found.
"""

allData = { # dictionary of values for countries
    'US': {'pop':325.7, 'gdp': 19.39, 'ccy': 'USD', 'fx':  1.0},
    'CA': {'pop': 36.5, 'gdp':  1.65, 'ccy': 'CAD', 'fx':  1.35},
    'MX': {'pop':129.2, 'gdp':  1.15, 'ccy': 'MXN', 'fx': 19.68}
    }

while True:
  cc = input("Please enter a country code: ")
  if cc in allData:
    metric = input("Please enter a statistic: ")
    if metric in allData[cc]:
      print(cc + " " + metric + " = " + str(allData[cc][metric]))
    else:
        print("Metric is not in data set. Please try again")
  else:
    print("Country is not in data set. Please try again.")

"""## Assignment 3: Parking Garage (6 points)

Write a program to compute the fee for parking in a garage for a number of hours.

The program should:
- Prompt the user for how many hours parked
- Calculate the fee based on the following rules:
  - $2.50/hour

  - minimum fee is $6.00

  - maximum fee is $20.00
- Print the result

For your program, define and use the following two functions:
```python
# use input() to prompt for the # of hours parked, return this value
def getParkingHours()

# takes as input hours (a number), returns the parking fee
def calcParkingFee()
```
"""

#Notes for professor: Did you want the result printed or just returned?

def getParkingHours():
  return int(input("How many hours did you park? Enter only a number:"))

def calcParkingFee(hours):
  fee = hours * 2.5
  if fee > 20:
    return 20
  if fee < 6:
    return 6
  return fee

calcParkingFee(getParkingHours())

"""## Assignment 4: Tuition (6 points)

A college charges tuition according to the following:
- 12 or more credits: $20,000/semester

- 1-11 credits: $1,200 + $1,700 per credit

Write a program that prompts the user for a number of credits and determines and displays the tuition for the semester. As part of your program, define and use the following function:
```python
def calcTuition(credits)
```
The function returns the tuition for a given number of credits
"""

def calcTuition(credits):
  if credits >= 12:
    return 20000
  elif credits > 0:
    return (1700 * credits) + 1200
  else:
    return 0

crdts = int(input("How many credits are you taking?"))
print(calcTuition(crdts))